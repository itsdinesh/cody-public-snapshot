name: Build Extension

on:
  workflow_dispatch:
  push:
    branches: [ '*' ]

jobs:
  # build:
  #   runs-on: ${{ matrix.os }}
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       include:
  #         - os: windows-latest
  #           platform: win32
  #           arch: x64
  #           npm_config_target_platform: win32
  #           npm_config_target_arch: x64
  #         - os: windows-latest
  #           platform: win32
  #           arch: arm64
  #           npm_config_target_platform: win32
  #           npm_config_target_arch: arm64
  #         - os: ubuntu-latest
  #           platform: linux
  #           arch: x64
  #           npm_config_target_platform: linux
  #           npm_config_target_arch: x64
  #         - os: ubuntu-latest
  #           platform: linux
  #           arch: arm64
  #           npm_config_target_platform: linux
  #           npm_config_target_arch: arm64
  #         - os: ubuntu-latest
  #           platform: linux
  #           arch: armhf
  #           npm_config_target_platform: linux
  #           npm_config_target_arch: arm
  #         - os: ubuntu-latest
  #           platform: alpine
  #           arch: x64
  #           npm_config_target_platform: alpine
  #           npm_config_target_arch: x64

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4

  #     - name: Setup Node.js
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: '20'
  #         registry-url: 'https://registry.npmjs.org'

  #     - name: Setup pnpm
  #       uses: pnpm/action-setup@v2
  #       with:
  #         version: 8
  #         run_install: false

  #     - name: Get pnpm store directory
  #       shell: bash
  #       run: |
  #         echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

  #     - name: Setup pnpm cache
  #       uses: actions/cache@v3
  #       with:
  #         path: ${{ env.STORE_PATH }}
  #         key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
  #         restore-keys: |
  #           ${{ runner.os }}-pnpm-store-

  #     - name: Install dependencies
  #       run: pnpm install --frozen-lockfile

  #     - name: Build shared library
  #       run: pnpm build

  #     - name: Install VSCode Extension Manager (vsce)
  #       run: npm install -g @vscode/vsce@latest

  #     - name: Build VSCode extension
  #       working-directory: ./vscode
  #       run: |
  #         pnpm install --frozen-lockfile
  #         pnpm run build

  #     - name: Package extension for platform
  #       working-directory: ./vscode
  #       run: |
  #         vsce package --target ${{ matrix.platform }}-${{ matrix.arch }} --no-dependencies --out ../cody-${{ matrix.platform }}-${{ matrix.arch }}.vsix
  #       env:
  #         npm_config_target_platform: ${{ matrix.npm_config_target_platform }}
  #         npm_config_target_arch: ${{ matrix.npm_config_target_arch }}

  #     - name: Upload extension artifact
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: cody-${{ matrix.platform }}-${{ matrix.arch }}
  #         path: cody-${{ matrix.platform }}-${{ matrix.arch }}.vsix
  #         retention-days: 30

  build-universal:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build shared library
        run: pnpm build

      - name: Install VSCode Extension Manager (vsce)
        run: npm install -g @vscode/vsce@latest

      - name: Build VSCode extension
        working-directory: ./vscode
        run: |
          pnpm install --frozen-lockfile
          pnpm run build

      - name: Package universal extension
        working-directory: ./vscode
        run: |
          vsce package --no-dependencies --out ../cody-universal.vsix

      - name: Upload universal extension artifact
        uses: actions/upload-artifact@v4
        with:
          name: cody-universal
          path: cody-universal.vsix
          retention-days: 30